/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_jportaudio_Stream */

#ifndef _Included_com_jportaudio_Stream
#define _Included_com_jportaudio_Stream
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_jportaudio_Stream
 * Method:    isFormatSupported
 * Signature: (Lcom/jportaudio/Stream/Parameters;Lcom/jportaudio/Stream/Parameters;D)Z
 */
JNIEXPORT jboolean JNICALL Java_com_jportaudio_Stream_isFormatSupported
  (JNIEnv *, jobject, jobject, jobject, jdouble);

/*
 * Class:     com_jportaudio_Stream
 * Method:    open
 * Signature: (JLcom/jportaudio/Stream/Flags;Lcom/jportaudio/Stream/Listener;[B)V
 */
JNIEXPORT void JNICALL Java_com_jportaudio_Stream_open
  (JNIEnv *, jobject, jlong, jobject, jobject, jbyteArray);

/*
 * Class:     com_jportaudio_Stream
 * Method:    close
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_jportaudio_Stream_close
  (JNIEnv *, jobject);

/*
 * Class:     com_jportaudio_Stream
 * Method:    start
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_jportaudio_Stream_start
  (JNIEnv *, jobject);

/*
 * Class:     com_jportaudio_Stream
 * Method:    stop
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_jportaudio_Stream_stop
  (JNIEnv *, jobject);

/*
 * Class:     com_jportaudio_Stream
 * Method:    abort
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_jportaudio_Stream_abort
  (JNIEnv *, jobject);

/*
 * Class:     com_jportaudio_Stream
 * Method:    isStreamStopped
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_jportaudio_Stream_isStreamStopped
  (JNIEnv *, jobject);

/*
 * Class:     com_jportaudio_Stream
 * Method:    isStreamActive
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_jportaudio_Stream_isStreamActive
  (JNIEnv *, jobject);

/*
 * Class:     com_jportaudio_Stream
 * Method:    read
 * Signature: ([BJ)V
 */
JNIEXPORT void JNICALL Java_com_jportaudio_Stream_read
  (JNIEnv *, jobject, jbyteArray, jlong);

/*
 * Class:     com_jportaudio_Stream
 * Method:    write
 * Signature: ([BJ)V
 */
JNIEXPORT void JNICALL Java_com_jportaudio_Stream_write
  (JNIEnv *, jobject, jbyteArray, jlong);

/*
 * Class:     com_jportaudio_Stream
 * Method:    getReadAvailable
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_jportaudio_Stream_getReadAvailable
  (JNIEnv *, jobject);

/*
 * Class:     com_jportaudio_Stream
 * Method:    getWriteAvailable
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_jportaudio_Stream_getWriteAvailable
  (JNIEnv *, jobject);

/*
 * Class:     com_jportaudio_Stream
 * Method:    getInfo
 * Signature: ()Lcom/jportaudio/Stream/Info;
 */
JNIEXPORT jobject JNICALL Java_com_jportaudio_Stream_getInfo
  (JNIEnv *, jobject);

/*
 * Class:     com_jportaudio_Stream
 * Method:    getTime
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_com_jportaudio_Stream_getTime
  (JNIEnv *, jobject);

/*
 * Class:     com_jportaudio_Stream
 * Method:    getCpuLoad
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_com_jportaudio_Stream_getCpuLoad
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
